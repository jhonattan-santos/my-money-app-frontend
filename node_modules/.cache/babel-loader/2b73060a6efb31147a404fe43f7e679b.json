{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tabs/tabActions';\nconst BASE_URL = 'http://localhost:3003/api';\nconst INITIAL_VALUES = {\n  credits: [{}],\n  debts: [{}]\n};\nexport function getList() {\n  const request = axios.get(`${BASE_URL}/billingCycles`);\n  return {\n    type: 'BILLING_CYCLES_FETCHED',\n    payload: request\n  };\n}\nexport function create(values) {\n  return submit(values, 'post');\n}\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return submit(values, 'delete');\n}\n\nfunction submit(values, method) {\n  return dispatch => {\n    const id = values._id ? values._id : '';\n    axios[method](`${BASE_URL}/billingCycles/${id}`, values).then(resp => {\n      toastr.success('Sucesso', 'Operação realizada com sucesso');\n      dispatch(init());\n    }).catch(e => {\n      e.response.data.errors.forEach(err => {\n        toastr.error('Erro', err);\n      });\n    });\n  };\n}\n\nexport function showUpdate(billingCycle) {\n  return changeTab('billingForm', 'tabUpdate', billingCycle);\n}\nexport function showDelete(billingCycle) {\n  return changeTab('billingForm', 'tabDelete', billingCycle);\n}\n\nfunction changeTab(formId, tabId, billingCycle) {\n  return [showTabs(tabId), selectTab(tabId), initialize(formId, billingCycle)];\n}\n\nexport function init() {\n  return [showTabs('tabCreate', 'tabList'), selectTab('tabList'), getList(), initialize('billingForm', INITIAL_VALUES)];\n}","map":{"version":3,"sources":["/home/jhonattan/www/java-script/my-money-app/frontend/src/billingCycle/billingCycleActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","BASE_URL","INITIAL_VALUES","credits","debts","getList","request","get","type","payload","create","values","submit","update","remove","method","dispatch","id","_id","then","resp","success","init","catch","e","response","data","errors","forEach","err","error","showUpdate","billingCycle","changeTab","showDelete","formId","tabId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAAUC,UAAV,QAA4B,YAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,2BAApC;AAEA,MAAMC,QAAQ,GAAG,2BAAjB;AACA,MAAMC,cAAc,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAC,EAAD,CAAV;AAAgBC,EAAAA,KAAK,EAAE,CAAC,EAAD;AAAvB,CAAvB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACtB,QAAMC,OAAO,GAAGV,KAAK,CAACW,GAAN,CAAW,GAAEN,QAAS,gBAAtB,CAAhB;AACA,SAAO;AACHO,IAAAA,IAAI,EAAE,wBADH;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;AAED,OAAO,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AAC3B,SAAOC,MAAM,CAACD,MAAD,EAAS,MAAT,CAAb;AACH;AAED,OAAO,SAASE,MAAT,CAAgBF,MAAhB,EAAwB;AAC3B,SAAOC,MAAM,CAACD,MAAD,EAAS,KAAT,CAAb;AACH;AAED,OAAO,SAASG,MAAT,CAAgBH,MAAhB,EAAwB;AAC3B,SAAOC,MAAM,CAACD,MAAD,EAAS,QAAT,CAAb;AACH;;AAED,SAASC,MAAT,CAAgBD,MAAhB,EAAwBI,MAAxB,EAAgC;AAC5B,SAAOC,QAAQ,IAAI;AACf,UAAMC,EAAE,GAAGN,MAAM,CAACO,GAAP,GAAaP,MAAM,CAACO,GAApB,GAA0B,EAArC;AACAtB,IAAAA,KAAK,CAACmB,MAAD,CAAL,CAAe,GAAEd,QAAS,kBAAiBgB,EAAG,EAA9C,EAAiDN,MAAjD,EACKQ,IADL,CACUC,IAAI,IAAI;AACVvB,MAAAA,MAAM,CAACwB,OAAP,CAAe,SAAf,EAA0B,gCAA1B;AACAL,MAAAA,QAAQ,CAACM,IAAI,EAAL,CAAR;AACH,KAJL,EAKKC,KALL,CAKWC,CAAC,IAAI;AACRA,MAAAA,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+BC,GAAG,IAAG;AACjChC,QAAAA,MAAM,CAACiC,KAAP,CAAa,MAAb,EAAqBD,GAArB;AACH,OAFD;AAGH,KATL;AAUH,GAZD;AAaH;;AAED,OAAO,SAASE,UAAT,CAAoBC,YAApB,EAAkC;AACrC,SAAOC,SAAS,CAAC,aAAD,EAAgB,WAAhB,EAA6BD,YAA7B,CAAhB;AACH;AAED,OAAO,SAASE,UAAT,CAAoBF,YAApB,EAAkC;AACrC,SAAOC,SAAS,CAAC,aAAD,EAAgB,WAAhB,EAA6BD,YAA7B,CAAhB;AACH;;AAED,SAASC,SAAT,CAAmBE,MAAnB,EAA2BC,KAA3B,EAAkCJ,YAAlC,EAAgD;AAC5C,SAAO,CACHjC,QAAQ,CAACqC,KAAD,CADL,EAEHpC,SAAS,CAACoC,KAAD,CAFN,EAGHtC,UAAU,CAACqC,MAAD,EAASH,YAAT,CAHP,CAAP;AAKH;;AAED,OAAO,SAASV,IAAT,GAAgB;AACnB,SAAO,CACHvB,QAAQ,CAAC,WAAD,EAAc,SAAd,CADL,EAEHC,SAAS,CAAC,SAAD,CAFN,EAGHK,OAAO,EAHJ,EAIHP,UAAU,CAAC,aAAD,EAAgBI,cAAhB,CAJP,CAAP;AAOH","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport {  initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tabs/tabActions'\n\nconst BASE_URL = 'http://localhost:3003/api'\nconst INITIAL_VALUES = {credits: [{}], debts: [{}]}\n\nexport function getList() {\n    const request = axios.get(`${BASE_URL}/billingCycles`)\n    return {\n        type: 'BILLING_CYCLES_FETCHED',\n        payload: request\n    }\n}\n\nexport function create(values) {\n    return submit(values, 'post')\n}\n\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return submit(values, 'delete')\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values._id ? values._id : ''\n        axios[method](`${BASE_URL}/billingCycles/${id}`, values)\n            .then(resp => {\n                toastr.success('Sucesso', 'Operação realizada com sucesso')\n                dispatch(init())\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(err =>{\n                    toastr.error('Erro', err)\n                })\n            })\n    }    \n}\n\nexport function showUpdate(billingCycle) {\n    return changeTab('billingForm', 'tabUpdate', billingCycle)\n}\n\nexport function showDelete(billingCycle) {\n    return changeTab('billingForm', 'tabDelete', billingCycle )\n}\n\nfunction changeTab(formId, tabId, billingCycle) {\n    return [\n        showTabs(tabId),\n        selectTab(tabId),\n        initialize(formId, billingCycle)\n    ]\n}\n\nexport function init() {\n    return [\n        showTabs('tabCreate', 'tabList'),\n        selectTab('tabList'),\n        getList(),\n        initialize('billingForm', INITIAL_VALUES),\n\n    ]\n}"]},"metadata":{},"sourceType":"module"}