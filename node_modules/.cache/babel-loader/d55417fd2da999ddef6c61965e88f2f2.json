{"ast":null,"code":"var _jsxFileName = \"/home/jhonattan/www/java-script/my-money-app/frontend/src/common/tabs/tabHeader.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectTab } from './tabActions';\nimport If from '../operator/if';\n\nclass TabHeader extends Component {\n  render() {\n    const selected = this.props.tab.selected === this.props.target;\n    const visible = this.props.tab.visible[this.props.target];\n    return /*#__PURE__*/React.createElement(If, {\n      test: visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: selected ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"javascript:;\",\n      \"data-toggle\": \"tab\",\n      \"data-target\": this.props.target,\n      onClick: () => this.props.selectTab(this.props.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `fa fa-${this.props.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }\n    }), \" \", this.props.label)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tab: state.tab\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  selectTab\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabHeader);","map":{"version":3,"sources":["/home/jhonattan/www/java-script/my-money-app/frontend/src/common/tabs/tabHeader.jsx"],"names":["React","Component","bindActionCreators","connect","selectTab","If","TabHeader","render","selected","props","tab","target","visible","icon","label","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,EAAP,MAAe,gBAAf;;AAGA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC9BM,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAeF,QAAf,KAA4B,KAAKC,KAAL,CAAWE,MAAxD;AACA,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWC,GAAX,CAAeE,OAAf,CAAuB,KAAKH,KAAL,CAAWE,MAAlC,CAAhB;AACA,wBACI,oBAAC,EAAD;AAAI,MAAA,IAAI,EAAEC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAEJ,QAAQ,GAAG,QAAH,GAAc,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,IAAI,EAAC,cAAT;AACI,qBAAY,KADhB;AAEI,qBAAa,KAAKC,KAAL,CAAWE,MAF5B;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWL,SAAX,CAAqB,KAAKK,KAAL,CAAWE,MAAhC,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIQ;AAAG,MAAA,SAAS,EAAG,SAAQ,KAAKF,KAAL,CAAWI,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,OAIwD,KAAKJ,KAAL,CAAWK,KAJnE,CADJ,CADJ,CADJ;AAYH;;AAhB6B;;AAkBlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEN,EAAAA,GAAG,EAAEM,KAAK,CAACN;AAAb,CAAL,CAA7B;;AACA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAIhB,kBAAkB,CAAC;AAAEE,EAAAA;AAAF,CAAD,EAAgBc,QAAhB,CAAzD;;AACA,eAAef,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { selectTab } from './tabActions'\nimport If from '../operator/if'\n\n\nclass TabHeader extends Component {\n    render() {\n        const selected = this.props.tab.selected === this.props.target\n        const visible = this.props.tab.visible[this.props.target]\n        return (\n            <If test={visible}>\n                <li className={selected ? 'active' : ''}>\n                    <a  href='javascript:;'\n                        data-toggle='tab'\n                        data-target={this.props.target}\n                        onClick={() => this.props.selectTab(this.props.target)} >\n                            <i className={`fa fa-${this.props.icon}`}></i> {this.props.label}                    \n                    </a>\n                </li>\n            </If>\n        )\n    }\n}\nconst mapStateToProps = state => ({ tab: state.tab })\nconst mapDispatchToProps = dispatch => bindActionCreators({ selectTab }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(TabHeader)"]},"metadata":{},"sourceType":"module"}