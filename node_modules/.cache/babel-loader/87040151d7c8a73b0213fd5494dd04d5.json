{"ast":null,"code":"var _jsxFileName = \"/home/jhonattan/www/java-script/my-money-app/frontend/src/main/authOrApp.jsx\";\nimport '../common/template/dependencies';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport App from './app';\nimport Auth from '../auth/auth';\nimport { validateToken } from '../auth/authActions';\n\nclass AuthOrApp extends Component {\n  componentWillMount() {\n    if (this.props.auth.user) {\n      this.props.validateToken(this.props.auth.user.token);\n    }\n  }\n\n  render() {\n    const {\n      user,\n      validToken\n    } = this.props.auth;\n\n    if (user && validToken) {\n      axios.defaults.headers.common['authorization'] = user.token;\n      return /*#__PURE__*/React.createElement(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }\n      }, this.props.children);\n    } else if (!user && !validToken) {\n      return /*#__PURE__*/React.createElement(Auth, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return false;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  validateToken\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthOrApp);","map":{"version":3,"sources":["/home/jhonattan/www/java-script/my-money-app/frontend/src/main/authOrApp.jsx"],"names":["React","Component","axios","connect","bindActionCreators","App","Auth","validateToken","AuthOrApp","componentWillMount","props","auth","user","token","render","validToken","defaults","headers","common","children","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,iCAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAApB,EAA0B;AACtB,WAAKF,KAAL,CAAWH,aAAX,CAAyB,KAAKG,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,KAA9C;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAuB,KAAKL,KAAL,CAAWC,IAAxC;;AACA,QAAIC,IAAI,IAAIG,UAAZ,EAAwB;AACpBb,MAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDN,IAAI,CAACC,KAAtD;AACA,0BAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKH,KAAL,CAAWS,QAAjB,CAAP;AACH,KAHD,MAGO,IAAI,CAACP,IAAD,IAAS,CAACG,UAAd,EAA0B;AAC7B,0BAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA;AACH,aAAO,KAAP;AACH;AACJ;;AAjB6B;;AAoBlC,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAAEV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AAAd,CAAL,CAA7B;;AACA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAInB,kBAAkB,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAoBgB,QAApB,CAAzD;;AACA,eAAepB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,SAA7C,CAAf","sourcesContent":["import '../common/template/dependencies'\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport App from './app'\nimport Auth from '../auth/auth'\nimport { validateToken } from '../auth/authActions'\n\nclass AuthOrApp extends Component {\n    componentWillMount() {\n        if (this.props.auth.user) {\n            this.props.validateToken(this.props.auth.user.token)\n        }\n    }\n\n    render() {\n        const { user, validToken } = this.props.auth\n        if (user && validToken) {\n            axios.defaults.headers.common['authorization'] = user.token\n            return <App>{this.props.children}</App>\n        } else if (!user && !validToken) {\n            return <Auth />\n        } else {\n            return false\n        }\n    }\n}\n\nconst mapStateToProps = state => ({ auth: state.auth })\nconst mapDispatchToProps = dispatch => bindActionCreators({ validateToken }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthOrApp)"]},"metadata":{},"sourceType":"module"}