{"ast":null,"code":"var _jsxFileName = \"/home/jhonattan/www/java-script/my-money-app/frontend/src/billingCycle/itemList.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Field, arrayInsert, arrayRemove } from 'redux-form';\nimport Grid from '../common/layout/grid';\nimport Input from '../common/form/input';\nimport IconButton from '../common/layout/iconButton';\nimport If from '../common/operator/if';\n\nclass ItemList extends Component {\n  add(index, item = {}) {\n    if (!this.props.readOnly) {\n      this.props.arrayInsert('billingForm', this.props.field, index, item);\n    }\n  }\n\n  remove(index) {\n    if (!this.props.readOnly && this.props.list.length > 1) {\n      this.props.arrayRemove('billingForm', this.props.field, index);\n    }\n  }\n\n  renderRows() {\n    const list = this.props.list || [];\n    return list.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: `${this.props.field}[${index}].name`,\n      component: Input,\n      placeholder: \"Informe o nome\",\n      readOnly: this.props.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: `${this.props.field}[${index}].value`,\n      component: Input,\n      placeholder: \"Informe valor\",\n      readOnly: this.props.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(If, {\n      test: this.props.showStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: `${this.props.field}[${index}].status`,\n      component: Input,\n      placeholder: \"Informe o status\",\n      readOnly: this.props.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      type: \"button\",\n      color: \"success\",\n      icon: \"plus\",\n      onClick: () => this.add(index + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      type: \"button\",\n      color: \"warning\",\n      icon: \"copy\",\n      onClick: () => this.add(index + 1, item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      type: \"button\",\n      color: \"danger\",\n      icon: \"trash-o\",\n      onClick: () => this.remove(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      cols: this.props.cols,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, this.props.legend), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(If, {\n      test: this.props.showStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"table-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, \"A\\xE7\\xF5es\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, this.renderRows()))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  arrayInsert,\n  arrayRemove\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(ItemList);","map":{"version":3,"sources":["/home/jhonattan/www/java-script/my-money-app/frontend/src/billingCycle/itemList.jsx"],"names":["React","Component","connect","bindActionCreators","Field","arrayInsert","arrayRemove","Grid","Input","IconButton","If","ItemList","add","index","item","props","readOnly","field","remove","list","length","renderRows","map","showStatus","render","cols","legend","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Field, arrayInsert, arrayRemove } from 'redux-form'\nimport Grid from '../common/layout/grid'\nimport Input from '../common/form/input'\nimport IconButton from '../common/layout/iconButton'\nimport If from '../common/operator/if'\n\n\nclass ItemList extends Component {\n\n    add(index, item = {}) {\n        if(!this.props.readOnly) {\n            this.props.arrayInsert('billingForm', this.props.field, index, item)\n        }\n    }\n\n    remove(index) {\n        if(!this.props.readOnly && this.props.list.length > 1) {\n            this.props.arrayRemove('billingForm', this.props.field, index )\n        }\n    }\n\n    renderRows() {\n        const list = this.props.list || []\n        return list.map((item, index) => (\n            <tr key={index}>\n                <td>\n                    <Field \n                        name={`${this.props.field}[${index}].name`}\n                        component={Input}\n                        placeholder='Informe o nome' \n                        readOnly={this.props.readOnly} />\n                </td>\n                <td>\n                    <Field \n                        name={`${this.props.field}[${index}].value`}\n                        component={Input}\n                        placeholder='Informe valor'\n                        readOnly={this.props.readOnly}\n                    />                    \n                </td>\n                <If test={this.props.showStatus}>\n                    <td>\n                        <Field \n                            name={`${this.props.field}[${index}].status`}\n                            component={Input}\n                            placeholder='Informe o status'\n                            readOnly={this.props.readOnly}\n                        />                    \n                    </td>\n                </If>                \n                <td>\n                    <IconButton \n                        type='button'\n                        color='success' \n                        icon='plus' \n                        onClick={() => this.add(index + 1)} />\n                    \n                    <IconButton \n                        type='button'\n                        color='warning' \n                        icon='copy' \n                        onClick={() => this.add(index + 1, item)}/>\n                    \n                    <IconButton \n                        type='button'\n                        color='danger' \n                        icon='trash-o' \n                        onClick={() => this.remove(index)} />\n                </td>\n            </tr>\n        ))\n    }\n\n    render() {\n        return (\n            <Grid cols={this.props.cols}>\n                <fieldset>\n                    <legend>{this.props.legend}</legend>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Valor</th>\n                                <If test={this.props.showStatus}>\n                                    <th>Status</th>\n                                </If>\n                                <th className='table-actions'>Ações</th>\n                            </tr>\n                        </thead>\n                        <tbody> \n                            {this.renderRows()}\n                        </tbody>\n                    </table>\n                </fieldset>\n            </Grid>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ arrayInsert, arrayRemove }, dispatch)\nexport default connect(null, mapDispatchToProps)(ItemList)"]},"metadata":{},"sourceType":"module"}